// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Group": {
            "post": {
                "description": "create group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "AddGroup",
                "operationId": "create-group",
                "parameters": [
                    {
                        "description": "group name",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id group",
                        "schema": {
                            "type": "int64"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a group by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Delete Group",
                "operationId": "delete-group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the group to delete",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID parameter",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Song": {
            "post": {
                "description": "create song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "AddSong",
                "operationId": "create-song",
                "parameters": [
                    {
                        "description": "info song",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id group",
                        "schema": {
                            "type": "int64"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a song by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Delete Song",
                "operationId": "delete-song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the song to delete",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID parameter",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Song/Details": {
            "put": {
                "description": "Update the details of a song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Update Song Details",
                "operationId": "update-song-details",
                "parameters": [
                    {
                        "description": "Song details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SongDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update confirmation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID parameter",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create songDetails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "AddSongDetails",
                "operationId": "create-song",
                "parameters": [
                    {
                        "description": "info songDetails",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SongDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "id songDetails",
                        "schema": {
                            "type": "int64"
                        }
                    }
                }
            }
        },
        "/Song/Text": {
            "post": {
                "description": "Retrieve the text of a song based on provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Get Song Text",
                "operationId": "get-song-text",
                "parameters": [
                    {
                        "description": "Song details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetSongText"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lines of the song",
                        "schema": {
                            "$ref": "#/definitions/model.BodyPagination"
                        }
                    },
                    "400": {
                        "description": "Invalid ID parameter",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/info": {
            "post": {
                "description": "Retrieve details of a song based on group and song name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Get Song Info",
                "operationId": "get-song-info",
                "parameters": [
                    {
                        "description": "Request Info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RequestInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song details",
                        "schema": {
                            "$ref": "#/definitions/model.SongDetailInfo"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/library": {
            "post": {
                "description": "Get all songs in the library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "library"
                ],
                "summary": "Get Library",
                "parameters": [
                    {
                        "description": "config",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LibraryConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SongsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BodyPagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.GetSongText": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "songId": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Group": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.LibraryConfig": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "sortOrder": {
                    "type": "string"
                },
                "sortTitle": {
                    "type": "string"
                }
            }
        },
        "model.RequestInfo": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.SongDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "songId": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SongDetailInfo": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.SongLibs": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "song_link": {
                    "type": "string"
                },
                "song_text": {
                    "type": "string"
                },
                "song_title": {
                    "type": "string"
                }
            }
        },
        "model.SongsResponse": {
            "type": "object",
            "properties": {
                "SongLibs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SongLibs"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Song libraries API",
	Description:      "API server song-details",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
